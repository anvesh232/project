# -*- coding: utf-8 -*-
"""Automation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GtLZ7bYOvqL4sJqbkBC6PH7GjRhLEtZB
"""

import pandas as pd
url='https://raw.githubusercontent.com/anvesh232/project/main/main_data.csv'
df=pd.read_csv(url)

import requests
import pandas as pd
from calendar import month_abbr
from datetime import datetime

# Define the base URL for the Census API
BASE_URL = "https://api.census.gov/data/"

# Define the variables you want to retrieve from the API
VARIABLES = "CBSA,HEFAMINC,HRNUMHOU,PEEDUCA,PEMARITL,PESEX,PRCOW1"

# Define a list of state FIPS codes (01 for Alabama, 02 for Alaska, ..., 51 for Wyoming)
STATE_FIPS_CODES = [str(i).zfill(2) for i in range(1, 51)]

# Get the current year and month
current_year = datetime.now().year
current_month = datetime.now().month

# Initialize an empty list to store data
data_list = []

# Loop through each year-month combination
for year in range(current_year, current_year + 1):
    for month in range(1, current_month ):  # Adjust loop to run until current month
        # Loop over state FIPS codes
        for state_code in STATE_FIPS_CODES:
            # Construct the API endpoint URL for the current year, month, and state
            url = f"{BASE_URL}{year}/cps/basic/{month_abbr[month].lower()}?get={VARIABLES}&for=state:{state_code}"

            # Make the API request
            response = requests.get(url)

            # Check if request was successful
            if response.status_code == 200:
                # Parse JSON response
                data = response.json()

                # Extract data for each row
                for row in data[1:]:
                    # Add YYYYMM column (year and month)
                    row_data = row[:len(VARIABLES.split(','))]  # Extract only necessary columns
                    row_data.append(f"{year}")
                    data_list.append(row_data)
            else:
                print(f"Failed to retrieve data for state {state_code} in {year}-{month_abbr[month].lower()}")

# Create DataFrame from the list of data
ting = pd.DataFrame(data_list, columns=VARIABLES.split(',') + ["YYYY"])

hefaminc_dict = {"16","15","14","13","12","11","10","9","8","7","6","5","4","3","2","1"}
peeduca_dict = {"46","33","44","39","42","31","38","40","-1","32","43","37","45","36","35","34","41"}
pemaritl_dict = {"4","2","1","3","-1","6","5"}
pesex_dict = { "2","1"}
prcow1_dict = {"-1","4","1","6","2","5","3"}
hrnumhou_dict= {"14","13","12","11","10","9","8","7","6","5","4","3","2","1"}
cbsa_dict={"34740","34980","39740","24020","13460","47900","43780","22180","26420","12940","40140","45940","14540","39140","48620","40900","11100","49020","17780","29620","14260","41740","10580","45300","46060","12620","15540","40980","22520","36100","19660","49180","31540","36540","13780","21140","39340","35660","27340","44100","21340","38900","48140","41620","31140","41180","13140","32580","37460","37340","22420","26900","37900","42100","27500","36220","27980","16980","22500","47580","30460","40380","31420","28020","49620","49740","10740","36420","42540","27140","23580","43620","12580","47300","31080","22020","12100","16700","16820","44700","11460","29540","25180","14500","13740","25260","39540","39300","41500","28420","42140","26580","47260","24140","32780","46140","16620","33740","21500","38860","00000","44060","45820","18580","28700","39820","28140","46340","37980","12220","48060","25860","20500","23420","27100","36740","22900","26820","30980","29180","41860","31700","27780","13820","12060","37100","22660","29820","20100","41700","49660","46700","17820","16860","12700","42200","15980","34940","48660","28940","17460","27260","17900","26980","34580","44140","23540","12540","35980","10900","17980","33660","47380","29700","34060","40060","14460","35380","17020","12020","16740","47220","19300","34820","29340","29460","41100","24580","36780","26620","22140","19740","38940","15940","14860","24660","45460","32820","46540","33460","33340","19820","14010","19380","14020","45780","49340","15680","16540","33780","12980","38300","21780","10420","45060","42220","17140","12260","16060","33860","19780","15180","44180","11700","10180","24340","29200","37860","40220","30780","41540","31180","39580","24780","35300","45220","17300","17660","22220","33100","48700","40420","29740","24860","28660","35620","23060","47940","16300","35840","19100","21660","19340","18140","41940","42340","27740","43300","38060","25420","25540","30340","15500","42660","33700","15380","41420","24540","17420","13980","16580","12420","38220","46520","25940","11540","20700","42020","36260","43340","43900"}
cbsa_lat_long={
  'Richmond, VA': {'latitude': 37.5407246, 'longitude': -77.4360481},
 'Rockford, IL': {'latitude': 42.2711311, 'longitude': -89.0939952},
 'Longview, TX': {'latitude': 32.5007037, 'longitude': -94.74048909999999},
 'Hartford-West Hartford-East Hartford, CT': {'latitude': 41.7634219,
  'longitude': -72.6128339},
 'Oklahoma City, OK': {'latitude': 35.4675602, 'longitude': -97.5164276},
 'Wichita Falls, TX': {'latitude': 33.9137085, 'longitude': -98.4933873},
 'Kingsport-Bristol-Bristol, TN-VA': {'latitude': 36.6305137,
  'longitude': -82.4752757},
 'Jackson, MI': {'latitude': 42.245869, 'longitude': -84.40134619999999},
 'St. Louis, MO-IL': {'latitude': 38.6270025, 'longitude': -90.19940419999999},
 'Huntington-Ashland, WV-KY-OH': {'latitude': 38.4784144,
  'longitude': -82.63793869999999},
 'Harrisburg-Carlisle, PA': {'latitude': 40.3157054,
  'longitude': -77.10249019999999},
 'Lexington-Fayette, KY': {'latitude': 38.0405837, 'longitude': -84.5037164},
 'Winchester, VA-WV': {'latitude': 39.1856597, 'longitude': -78.1633341},
 'Albuquerque, NM': {'latitude': 35.0843859, 'longitude': -106.650422},
 'Portland-Vancouver-Hillsboro, OR-WA': {'latitude': 45.65367579999999,
  'longitude': -122.5462872},
 'Tulsa, OK': {'latitude': 36.1539816, 'longitude': -95.99277500000001},
 'Dayton, OH': {'latitude': 39.7589478, 'longitude': -84.1916069},
 'Wichita, KS': {'latitude': 37.68717609999999,
  'longitude': -97.33005299999999},
 'Madison, WI': {'latitude': 43.0721661, 'longitude': -89.4007501},
 'Birmingham-Hoover, AL': {'latitude': 33.4053867, 'longitude': -86.8113781},
 'Charlottesville, VA': {'latitude': 38.0293059,
  'longitude': -78.47667810000002},
 'Jacksonville, NC': {'latitude': 34.7540524, 'longitude': -77.4302414},
 'Sacramento--Roseville--Arden-Arcade, CA': {'latitude': 38.6008071,
  'longitude': -121.3770336},
 'New Orleans-Metairie, LA': {'latitude': 30.0019543,
  'longitude': -90.1633887},
 'Tampa-St. Petersburg-Clearwater, FL': {'latitude': 28.274347,
  'longitude': -82.38857829999999},
 'Eugene, OR': {'latitude': 44.0520691, 'longitude': -123.0867536},
 'Davenport-Moline-Rock Island, IA-IL': {'latitude': 41.5067003,
  'longitude': -90.51513419999999},
 'Saginaw, MI': {'latitude': 43.4194699, 'longitude': -83.9508068},
 'Erie, PA': {'latitude': 42.12922409999999, 'longitude': -80.085059},
 'Seattle-Tacoma-Bellevue, WA': {'latitude': 47.6061031,
  'longitude': -122.3320534},
 'East Stroudsburg, PA': {'latitude': 41.0030522, 'longitude': -75.1817547},
 'Allentown-Bethlehem-Easton, PA-NJ': {'latitude': 40.6510611,
  'longitude': -75.44388529999999},
 'Lewiston-Auburn, ME': {'latitude': 44.100351,
  'longitude': -70.21477639999999},
 'Johnson City, TN': {'latitude': 36.3134397, 'longitude': -82.3534727},
 'Mount Vernon-Anacortes, WA': {'latitude': 48.4241961,
  'longitude': -121.7114362},
 'College Station-Bryan, TX': {'latitude': 30.825147,
  'longitude': -96.49297969999999},
 'Abilene, TX': {'latitude': 32.4487364, 'longitude': -99.73314390000002},
 'Albany-Schenectady-Troy, NY': {'latitude': 42.7636479,
  'longitude': -73.65362089999999},
 'Syracuse, NY': {'latitude': 43.0481221, 'longitude': -76.14742439999999},
 'Little Rock-North Little Rock-Conway, AR': {'latitude': 35.0917506,
  'longitude': -92.4366522},
 'Milwaukee-Waukesha-West Allis, WI': {'latitude': 43.0166806,
  'longitude': -88.0070315},
 'Providence-Warwick, RI-MA': {'latitude': 41.7169652,
  'longitude': -71.4939096},
 'Laredo, TX': {'latitude': 27.5035613, 'longitude': -99.5075519},
 'Billings, MT': {'latitude': 45.7832856, 'longitude': -108.5006904},
 'Tyler, TX': {'latitude': 32.3512601, 'longitude': -95.30106239999999},
 'San Luis Obispo-Paso Robles-Arroyo Grande, CA': {'latitude': 35.1185868,
  'longitude': -120.5907252},
 'Vineland-Bridgeton, NJ': {'latitude': 39.4704305, 'longitude': -75.1398098},
 'Bangor, ME': {'latitude': 44.8016128, 'longitude': -68.7712257},
 'Tallahassee, FL': {'latitude': 30.4381828, 'longitude': -84.28062349999999},
 'Blacksburg-Christiansburg-Radford, VA': {'latitude': 37.13179239999999,
  'longitude': -80.5764477},
 'Clarksville, TN-KY': {'latitude': 36.5297706, 'longitude': -87.3594528},
 'Bakersfield, CA': {'latitude': 35.3732921, 'longitude': -119.0187125},
 'Athens-Clarke County, GA': {'latitude': 33.9519347, 'longitude': -83.357567},
 'Augusta-Richmond County, GA-SC': {'latitude': 33.3623499,
  'longitude': -82.0407137},
 'Iowa City, IA': {'latitude': 41.6578257, 'longitude': -91.53461689999999},
 'Fresno, CA': {'latitude': 36.7377981, 'longitude': -119.7871247},
 'Austin-Round Rock, TX': {'latitude': 30.5122035, 'longitude': -97.6731253},
 'Auburn-Opelika, AL': {'latitude': 32.637656, 'longitude': -85.3836481},
 'Fort Collins, CO': {'latitude': 40.5852602, 'longitude': -105.084423},
 'Monroe, LA': {'latitude': 32.5093109, 'longitude': -92.1193012},
 'Rochester, NY': {'latitude': 43.15657789999999, 'longitude': -77.6088465},
 'Boulder, CO': {'latitude': 40.0149856, 'longitude': -105.2705456},
 'Greensboro-High Point, NC': {'latitude': 36.1029481,
  'longitude': -79.9335219},
 'Morgantown, WV': {'latitude': 39.629526, 'longitude': -79.95589679999999},
 'Baltimore-Columbia-Towson, MD': {'latitude': 39.372594,
  'longitude': -76.64127119999999},
 'Toledo, OH': {'latitude': 41.6528052, 'longitude': -83.5378674},
 'McAllen-Edinburg-Mission, TX': {'latitude': 26.2159066,
  'longitude': -98.32529319999999},
 'Florence, SC': {'latitude': 34.1954331, 'longitude': -79.7625625},
 'Virginia Beach-Norfolk-Newport News, VA-NC': {'latitude': 36.8507689,
  'longitude': -76.28587259999999},
 'Pine Bluff, AR': {'latitude': 34.224908, 'longitude': -92.0033977},
 'Lakeland-Winter Haven, FL': {'latitude': 28.0222435,
  'longitude': -81.7328567},
 'Macon, GA': {'latitude': 32.8406946, 'longitude': -83.6324022},
 'Columbus, GA-AL': {'latitude': 32.4609764, 'longitude': -84.9877094},
 'Urban Honolulu, HI': {'latitude': 21.3098845, 'longitude': -157.8581401},
 'Roanoke, VA': {'latitude': 37.2709704, 'longitude': -79.9414266},
 'Glens Falls, NY': {'latitude': 43.3095164, 'longitude': -73.6440058},
 'North Port-Sarasota-Bradenton, FL': {'latitude': 27.3959334,
  'longitude': -82.5185837},
 'Panama City, FL': {'latitude': 30.1588129, 'longitude': -85.6602058},
 'Shreveport-Bossier City, LA': {'latitude': 32.5159852,
  'longitude': -93.7321228},
 'Springfield, MO': {'latitude': 37.2089572, 'longitude': -93.29229889999999},
 'Las Vegas-Henderson-Paradise, NV': {'latitude': 36.0971945,
  'longitude': -115.1466648},
 'Montgomery, AL': {'latitude': 32.3792233, 'longitude': -86.3077368},
 'Greeley, CO': {'latitude': 40.4233142, 'longitude': -104.7091322},
 'Hanford-Corcoran, CA': {'latitude': 36.0988489, 'longitude': -119.8815203},
 'Lafayette-West Lafayette, IN': {'latitude': 40.4258686,
  'longitude': -86.90806549999999},
 'Redding, CA': {'latitude': 40.5865396, 'longitude': -122.3916754},
 'Spartanburg, SC': {'latitude': 34.9495672, 'longitude': -81.9320482},
 'Waco, TX': {'latitude': 31.549333, 'longitude': -97.1466695},
 'Janesville-Beloit, WI': {'latitude': 42.5083482,
  'longitude': -89.03177649999999},
 'Riverside-San Bernardino-Ontario, CA': {'latitude': 34.9592083,
  'longitude': -116.419389},
 'Salem, OR': {'latitude': 44.9428975, 'longitude': -123.0350963},
 'Spokane-Spokane Valley, WA': {'latitude': 47.6826185,
  'longitude': -117.1558381},
 "Coeur d'Alene, ID": {'latitude': 47.6734632, 'longitude': -116.7812225},
 'Reading, PA': {'latitude': 40.3356483, 'longitude': -75.9268747},
 'Boston-Cambridge-Newton, MA-NH': {'latitude': 42.3600709,
  'longitude': -71.0588305},
 'Monroe, MI': {'latitude': 41.9164343, 'longitude': -83.3977101},
 'Atlanta-Sandy Springs-Roswell, GA': {'latitude': 34.0232431,
  'longitude': -84.3615555},
 'Santa Rosa, CA': {'latitude': 38.440429, 'longitude': -122.7140548},
 'Daphne-Fairhope-Foley, AL': {'latitude': 30.4065868,
  'longitude': -87.6835974},
 'Johnstown, PA': {'latitude': 40.32674069999999, 'longitude': -78.9219698},
 'Columbia, SC': {'latitude': 34.0007104, 'longitude': -81.0348144},
 'Columbus, OH': {'latitude': 39.9611755, 'longitude': -82.99879419999999},
 'Provo-Orem, UT': {'latitude': 40.3566937, 'longitude': -111.7376178},
 'Gainesville, GA': {'latitude': 34.2978794, 'longitude': -83.8240663},
 'Santa Fe, NM': {'latitude': 35.6869752, 'longitude': -105.937799},
 'New Haven-Milford, CT': {'latitude': 41.2306979, 'longitude': -73.064036},
 'Wausau, WI': {'latitude': 44.9591352, 'longitude': -89.6301221},
 'Atlantic City-Hammonton, NJ': {'latitude': 39.6365056,
  'longitude': -74.8023853},
 'Greenville, NC': {'latitude': 35.612661, 'longitude': -77.3663538},
 'Jacksonville, FL': {'latitude': 30.3321838, 'longitude': -81.65565099999999},
 'Buffalo-Cheektowaga-Niagara Falls, NY': {'latitude': 42.9071477,
  'longitude': -78.7542892},
 'Pittsburgh, PA': {'latitude': 40.44062479999999, 'longitude': -79.9958864},
 'Deltona-Daytona Beach-Ormond Beach, FL': {'latitude': 29.0396219,
  'longitude': -81.2518833},
 'St. George, UT': {'latitude': 37.0965278, 'longitude': -113.5684164},
 'Terre Haute, IN': {'latitude': 39.4667034, 'longitude': -87.41390919999999},
 'Corpus Christi, TX': {'latitude': 27.8005828,
  'longitude': -97.39638099999999},
 'Naples-Immokalee-Marco Island, FL': {'latitude': 25.9397412,
  'longitude': -81.70753549999999},
 'Huntsville, AL': {'latitude': 34.7303688, 'longitude': -86.5861037},
 'Nashville-Davidson--Murfreesboro--Franklin, TN': {'latitude': 35.8456213,
  'longitude': -86.39027},
 'Denver-Aurora-Lakewood, CO': {'latitude': 39.5142848,
  'longitude': -104.8454619},
 'Idaho Falls, ID': {'latitude': 43.4926602, 'longitude': -112.0407506},
 'Los Angeles-Long Beach-Anaheim, CA': {'latitude': 33.8365932,
  'longitude': -117.9143012},
 'Fort Wayne, IN': {'latitude': 41.079273, 'longitude': -85.1393513},
 'Warner Robins, GA': {'latitude': 32.6130007, 'longitude': -83.624201},
 'San Antonio-New Braunfels, TX': {'latitude': 29.4249213,
  'longitude': -98.4930675},
 'Youngstown-Warren-Boardman, OH-PA': {'latitude': 41.291972,
  'longitude': -80.54384499999999},
 'Beaumont-Port Arthur, TX': {'latitude': 29.878116, 'longitude': -93.9405549},
 'Memphis, TN-MS-AR': {'latitude': 35.1495343, 'longitude': -90.0489801},
 'Winston-Salem, NC': {'latitude': 36.09985959999999, 'longitude': -80.244216},
 'Ogden-Clearfield, UT': {'latitude': 41.13571400000001,
  'longitude': -111.9999435},
 'Burlington, NC': {'latitude': 36.0959472, 'longitude': -79.4372016},
 'Bridgeport-Stamford-Norwalk, CT': {'latitude': 41.211842,
  'longitude': -73.2057595},
 'Racine, WI': {'latitude': 42.7261309, 'longitude': -87.78285230000002},
 'Ann Arbor, MI': {'latitude': 42.2808256, 'longitude': -83.7430378},
 'Vallejo-Fairfield, CA': {'latitude': 38.2562125, 'longitude': -121.9280928},
 'Tucson, AZ': {'latitude': 32.2539787, 'longitude': -110.9741769},
 'Burlington-South Burlington, VT': {'latitude': 44.4707506,
  'longitude': -73.1516317},
 'Hagerstown-Martinsburg, MD-WV': {'latitude': 39.6061516,
  'longitude': -78.0195387},
 'Springfield, IL': {'latitude': 39.78172130000001, 'longitude': -89.6501481},
 'Canton-Massillon, OH': {'latitude': 40.79894729999999,
  'longitude': -81.378447},
 'San Jose-Sunnyvale-Santa Clara, CA': {'latitude': 37.36883,
  'longitude': -122.0363496},
 'New York-Newark-Jersey City, NY-NJ-PA': {'latitude': 40.7177545,
  'longitude': -74.0431435},
 'Omaha-Council Bluffs, NE-IA': {'latitude': 41.2619444,
  'longitude': -95.8608333},
 'Sherman-Denison, TX': {'latitude': 33.6704808, 'longitude': -96.6101496},
 'Myrtle Beach-Conway-North Myrtle Beach, SC-NC': {'latitude': 35.7595731,
  'longitude': -79.01929969999999},
 'Appleton, WI': {'latitude': 44.2619309, 'longitude': -88.41538469999999},
 'Oshkosh-Neenah, WI': {'latitude': 44.1858193, 'longitude': -88.462609},
 'Palm Bay-Melbourne-Titusville, FL': {'latitude': 28.263933,
  'longitude': -80.7214417},
 'Evansville, IN-KY': {'latitude': 37.9715592, 'longitude': -87.5710898},
 'Green Bay, WI': {'latitude': 44.5133188, 'longitude': -88.0132958},
 'Hilton Head Island-Bluffton-Beaufort, SC': {'latitude': 32.2371465,
  'longitude': -80.8603868},
 'Greenville-Anderson-Mauldin, SC': {'latitude': 34.8420019,
  'longitude': -82.34518899999999},
 'Modesto, CA': {'latitude': 37.6392595, 'longitude': -120.9970014},
 'Salt Lake City, UT': {'latitude': 40.7607793, 'longitude': -111.8910474},
 'Santa Cruz-Watsonville, CA': {'latitude': 36.910231,
  'longitude': -121.7568946},
 'Las Cruces, NM': {'latitude': 32.3199396, 'longitude': -106.7636538},
 'Salinas, CA': {'latitude': 36.6777372, 'longitude': -121.6555013},
 'Jackson, MS': {'latitude': 32.2987573, 'longitude': -90.1848103},
 'Charleston, WV': {'latitude': 38.3498195, 'longitude': -81.6326234},
 'Raleigh, NC': {'latitude': 35.7795897, 'longitude': -78.6381787},
 'Scranton--Wilkes-Barre--Hazleton, PA': {'latitude': 40.9584181,
  'longitude': -75.97464719999999},
 'Chambersburg-Waynesboro, PA': {'latitude': 39.9375911,
  'longitude': -77.6611022},
 'Binghamton, NY': {'latitude': 42.09868669999999,
  'longitude': -75.91797380000001},
 'Charleston-North Charleston, SC': {'latitude': 32.8909785,
  'longitude': -80.0691552},
 'Fort Smith, AR-OK': {'latitude': 35.428109, 'longitude': -94.3850907},
 'Dallas-Fort Worth-Arlington, TX': {'latitude': 32.7078751,
  'longitude': -96.9209135},
 'Flint, MI': {'latitude': 43.0125274, 'longitude': -83.6874562},
 'Orlando-Kissimmee-Sanford, FL': {'latitude': 28.5828156,
  'longitude': -81.3399414},
 'Peoria, IL': {'latitude': 40.6936488, 'longitude': -89.5889864},
 'Kahului-Wailuku-Lahaina, HI': {'latitude': 20.882371,
  'longitude': -156.6816195},
 'Detroit-Warren-Dearborn, MI': {'latitude': 42.3222599,
  'longitude': -83.17631449999999},
 'Florence-Muscle Shoals, AL': {'latitude': 34.7448112,
  'longitude': -87.66752919999999},
 'Cedar Rapids, IA': {'latitude': 41.9778795, 'longitude': -91.6656232},
 'York-Hanover, PA': {'latitude': 39.8006553, 'longitude': -76.9830358},
 'Lansing-East Lansing, MI': {'latitude': 42.7495016,
  'longitude': -84.4514619},
 'Amarillo, TX': {'latitude': 35.2219971, 'longitude': -101.8312969},
 'Lancaster, PA': {'latitude': 40.0378755, 'longitude': -76.3055144},
 'Lafayette, LA': {'latitude': 30.2240897, 'longitude': -92.0198427},
 'Charlotte-Concord-Gastonia, NC-SC': {'latitude': 35.1223173,
  'longitude': -80.7214417},
 'Louisville/Jefferson County, KY-IN': {'latitude': 40.5512165,
  'longitude': -85.60236429999999},
 'Asheville, NC': {'latitude': 35.5950581, 'longitude': -82.5514869},
 'Chico, CA': {'latitude': 39.7284944, 'longitude': -121.8374777},
 'Salisbury, MD-DE': {'latitude': 38.3606736, 'longitude': -75.5993692},
 'Medford, OR': {'latitude': 42.3265152, 'longitude': -122.8755949},
 'Watertown-Fort Drum, NY': {'latitude': 43.9747838,
  'longitude': -75.91075649999999},
 'Prescott, AZ': {'latitude': 34.5400242, 'longitude': -112.4685025},
 'Champaign-Urbana, IL': {'latitude': 40.1164204, 'longitude': -88.2433829},
 'Phoenix-Mesa-Scottsdale, AZ': {'latitude': 33.4982289,
  'longitude': -112.2384017},
 'Mobile, AL': {'latitude': 30.6953657, 'longitude': -88.0398912},
 'Baton Rouge, LA': {'latitude': 30.4514677, 'longitude': -91.18714659999999},
 'Farmington, NM': {'latitude': 36.72805830000001, 'longitude': -108.2186856},
 'Yuma, AZ': {'latitude': 32.6926512, 'longitude': -114.6276916},
 'Philadelphia-Camden-Wilmington, PA-NJ-DE-MD': {'latitude': 38.9108325,
  'longitude': -75.52766989999999},
 'Lake Charles, LA': {'latitude': 30.2265949, 'longitude': -93.2173758},
 'Grand Rapids-Wyoming, MI': {'latitude': 42.9133602,
  'longitude': -85.7053085},
 'Cape Coral-Fort Myers, FL': {'latitude': 26.5605279,
  'longitude': -81.9274896},
 'Kennewick-Richland, WA': {'latitude': 46.2086683, 'longitude': -119.119948},
 'Gainesville, FL': {'latitude': 29.6519563, 'longitude': -82.324998},
 'Colorado Springs, CO': {'latitude': 38.8338816, 'longitude': -104.8213634},
 'Dover, DE': {'latitude': 39.158168, 'longitude': -75.5243682},
 'Sioux Falls, SD': {'latitude': 43.5460223, 'longitude': -96.731265},
 'Akron, OH': {'latitude': 41.0814447, 'longitude': -81.51900529999999},
 'Bowling Green, KY': {'latitude': 36.9685219, 'longitude': -86.4808043},
 'Hickory-Lenoir-Morganton, NC': {'latitude': 35.7771691,
  'longitude': -81.3399414},
 'Utica-Rome, NY': {'latitude': 43.100903, 'longitude': -75.232664},
 'Killeen-Temple, TX': {'latitude': 31.1241507,
  'longitude': -97.69822719999999},
 'Houston-The Woodlands-Sugar Land, TX': {'latitude': 29.5984434,
  'longitude': -95.6225521},
 'Bloomington, IN': {'latitude': 39.165325, 'longitude': -86.52638569999999},
 'Minneapolis-St. Paul-Bloomington, MN-WI': {'latitude': 45.2472601,
  'longitude': -93.4553904},
 'California-Lexington Park, MD': {'latitude': 38.3004029,
  'longitude': -76.5074542},
 'Oxnard-Thousand Oaks-Ventura, CA': {'latitude': 34.1761133,
  'longitude': -118.8487793},
 'Fargo, ND-MN': {'latitude': 46.8771863, 'longitude': -96.7898034},
 'El Paso, TX': {'latitude': 31.7618778, 'longitude': -106.4850217},
 'Elkhart-Goshen, IN': {'latitude': 41.5456719, 'longitude': -85.8281458},
 'Fayetteville-Springdale-Rogers, AR-MO': {'latitude': 36.1745404,
  'longitude': -94.13898309999999},
 'Bend-Redmond, OR': {'latitude': 44.0581728, 'longitude': -121.3153096},
 'Pensacola-Ferry Pass-Brent, FL': {'latitude': 30.4332772,
  'longitude': -87.19996599999999},
 'Indianapolis-Carmel-Anderson, IN': {'latitude': 39.83618999999999,
  'longitude': -86.17517590000001},
 'Brownsville-Harlingen, TX': {'latitude': 26.1906306,
  'longitude': -97.69610259999999},
 'San Francisco-Oakland-Hayward, CA': {'latitude': 37.6687665,
  'longitude': -122.0809964},
 'Carbondale-Marion, IL': {'latitude': 37.7272727, 'longitude': -89.2167501},
 'Waterloo-Cedar Falls, IA': {'latitude': 42.5206295,
  'longitude': -92.4356627},
 'Washington-Arlington-Alexandria, DC-VA-MD-WV': {'latitude': 38.9071923,
  'longitude': -77.0368707},
 'Cleveland-Elyria, OH': {'latitude': 41.3683798,
  'longitude': -82.10764859999999},
 'Port St. Lucie, FL': {'latitude': 27.2730492, 'longitude': -80.3582261},
 'Kalamazoo-Portage, MI': {'latitude': 42.2011538, 'longitude': -85.5800022},
 'Miami-Fort Lauderdale-West Palm Beach, FL': {'latitude': 26.7153424,
  'longitude': -80.0533746},
 'Boise City, ID': {'latitude': 43.6150186, 'longitude': -116.2023137},
 'Topeka, KS': {'latitude': 39.0473451, 'longitude': -95.67515759999999},
 'Kansas City, MO-KS': {'latitude': 39.0997265, 'longitude': -94.5785667},
 'Des Moines-West Des Moines, IA': {'latitude': 41.5410117,
  'longitude': -93.8163328},
 'Chicago-Naperville-Elgin, IL-IN-WI': {'latitude': 42.2162567,
  'longitude': -87.8549755},
 'Visalia-Porterville, CA': {'latitude': 36.1341739,
  'longitude': -118.8596804},
 'Niles-Benton Harbor, MI': {'latitude': 42.1043988, 'longitude': -86.4453623},
 'Bloomington, IL': {'latitude': 40.4842027, 'longitude': -88.99368729999999},
 'Barnstable Town, MA': {'latitude': 41.7003208, 'longitude': -70.3002024},
 'Knoxville, TN': {'latitude': 35.9606384, 'longitude': -83.9207392},
 'Muskegon, MI': {'latitude': 43.2341813, 'longitude': -86.24839209999999},
 'Chattanooga, TN-GA': {'latitude': 35.0457984, 'longitude': -85.3093995},
 'Trenton, NJ': {'latitude': 40.2205824, 'longitude': -74.759717},
 'Springfield, MA': {'latitude': 42.1014831, 'longitude': -72.589811},
 'Santa Maria-Santa Barbara, CA': {'latitude': 34.9530337,
  'longitude': -120.4357191},
 'Savannah, GA': {'latitude': 32.0808989, 'longitude': -81.091203},
 'Williamsport, PA': {'latitude': 41.2411897, 'longitude': -77.00107860000001},
 'Odessa, TX': {'latitude': 31.8456816, 'longitude': -102.3676431},
 'Durham-Chapel Hill, NC': {'latitude': 35.9131996, 'longitude': -79.0558445},
 'Worcester, MA-CT': {'latitude': 42.2625932, 'longitude': -71.8022934},
 'Cincinnati, OH-KY-IN': {'latitude': 39.1031182, 'longitude': -84.5120196},
 'Goldsboro, NC': {'latitude': 35.3848841, 'longitude': -77.9927651},
 'Stockton-Lodi, CA': {'latitude': 38.1400289, 'longitude': -121.2689395},
 'Fayetteville, NC': {'latitude': 35.0523673, 'longitude': -78.87837739999999},
 'Battle Creek, MI': {'latitude': 42.3211522, 'longitude': -85.17971419999999},
 'South Bend-Mishawaka, IN-MI': {'latitude': 44.3148443,
  'longitude': -85.60236429999999},
 'Portland-South Portland, ME': {'latitude': 43.6501182,
  'longitude': -70.2415989},
 'Manchester-Nashua, NH': {'latitude': 42.7851459, 'longitude': -71.4797373},
 'Ocala, FL': {'latitude': 29.1871986, 'longitude': -82.14009229999999},
 'Cleveland, TN': {'latitude': 35.1595182, 'longitude': -84.8766115},
 'San Diego-Carlsbad, CA': {'latitude': 33.1580933, 'longitude': -117.3505939},
 'Lubbock, TX': {'latitude': 33.5778239, 'longitude': -101.8552934}}

results = []

# Load your DataFrame 'ting' here

# Convert CBSA, YYYY, and additional columns to strings
ting = ting.astype({'CBSA': str, 'YYYY': str, 'HEFAMINC': str, 'PEEDUCA': str, 'PEMARITL': str, 'PESEX': str, 'PRCOW1': str, 'HRNUMHOU': str})

# Iterate over CBSA codes
for cbsa_code in cbsa_dict:
    # Iterate over the range of years from 2010 to 2024
    for year in range(2010, 2025):
        # Filter the DataFrame for the specified CBSA code and year
        filtered_data = ting[(ting['CBSA'] == cbsa_code) & (ting['YYYY'] == str(year))]

        # Initialize dictionaries to store the counts for each value in additional columns
        hefaminc_counts = {key: 0 for key in hefaminc_dict}
        peeduca_counts = {key: 0 for key in peeduca_dict}
        pemaritl_counts = {key: 0 for key in pemaritl_dict}
        pesex_counts = {key: 0 for key in pesex_dict}
        prcow1_counts = {key: 0 for key in prcow1_dict}
        hrnumhou_counts = {key: 0 for key in hrnumhou_dict}

        # Iterate through the filtered data and count occurrences of each value in additional columns
        for value in filtered_data['HEFAMINC']:
            if value in hefaminc_counts:
                hefaminc_counts[value] += 1
        for value in filtered_data['PEEDUCA']:
            if value in peeduca_counts:
                peeduca_counts[value] += 1
        for value in filtered_data['PEMARITL']:
            if value in pemaritl_counts:
                pemaritl_counts[value] += 1
        for value in filtered_data['PESEX']:
            if value in pesex_counts:
                pesex_counts[value] += 1
        for value in filtered_data['PRCOW1']:
            if value in prcow1_counts:
                prcow1_counts[value] += 1
        for value in filtered_data['HRNUMHOU']:
            if value in hrnumhou_counts:
                hrnumhou_counts[value] += 1

        # Append the results for the current year to the list
        results.append({
            'CBSA': cbsa_code,
            'YYYY': year,
            'HEFAMINC_counts': hefaminc_counts,
            'PEEDUCA_counts': peeduca_counts,
            'PEMARITL_counts': pemaritl_counts,
            'PESEX_counts': pesex_counts,
            'PRCOW1_counts': prcow1_counts,
            'HRNUMHOU_counts': hrnumhou_counts
        })

# Create a DataFrame from the results list
result_df = pd.DataFrame(results)

df=df[df["YYYY"] != "current_year"]
merged_df = pd.merge(df, result_df, on=["CBSA", "YYYY"], how="inner")
df=merged_df
# Convert 'CBSA' column to string data type
df['CBSA'] = df['CBSA'].astype(str)

# Merge with cbsa_dict to get metropolitan area name
df['Metropolitan'] = df['CBSA'].map(cbsa_dict)

# Merge with cbsa_lat_long to get latitude and longitude
df['Coordinates'] = df['Metropolitan'].map(cbsa_lat_long)

# Handle missing values in Coordinates
df['Coordinates'].fillna({}, inplace=True)

# Extract latitude and longitude from Coordinates dictionary
df['Latitude'] = df['Coordinates'].apply(lambda x: x.get('latitude') if isinstance(x, dict) else None)
df['Longitude'] = df['Coordinates'].apply(lambda x: x.get('longitude') if isinstance(x, dict) else None)

# Drop unnecessary columns
df.drop(['Metropolitan', 'Coordinates'], axis=1, inplace=True)